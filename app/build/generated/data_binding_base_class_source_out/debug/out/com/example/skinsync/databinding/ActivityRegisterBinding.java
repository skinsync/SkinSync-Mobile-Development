// Generated by view binder compiler. Do not edit!
package com.example.skinsync.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.skinsync.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView background;

  @NonNull
  public final ConstraintLayout box;

  @NonNull
  public final Button buttonRegister;

  @NonNull
  public final TextView descApp;

  @NonNull
  public final ConstraintLayout fieldConfirmPassword;

  @NonNull
  public final ConstraintLayout fieldEmail;

  @NonNull
  public final ConstraintLayout fieldPassword;

  @NonNull
  public final ConstraintLayout fieldUsername;

  @NonNull
  public final ImageView iconConfirmPassword;

  @NonNull
  public final ImageView iconEmail;

  @NonNull
  public final ImageView iconPassword;

  @NonNull
  public final ImageView iconUser;

  @NonNull
  public final EditText inputConfirmPassword;

  @NonNull
  public final EditText inputEmail;

  @NonNull
  public final EditText inputPassword;

  @NonNull
  public final EditText inputUsername;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ProgressBar progressIndicator;

  @NonNull
  public final TextView titleApp;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView background,
      @NonNull ConstraintLayout box, @NonNull Button buttonRegister, @NonNull TextView descApp,
      @NonNull ConstraintLayout fieldConfirmPassword, @NonNull ConstraintLayout fieldEmail,
      @NonNull ConstraintLayout fieldPassword, @NonNull ConstraintLayout fieldUsername,
      @NonNull ImageView iconConfirmPassword, @NonNull ImageView iconEmail,
      @NonNull ImageView iconPassword, @NonNull ImageView iconUser,
      @NonNull EditText inputConfirmPassword, @NonNull EditText inputEmail,
      @NonNull EditText inputPassword, @NonNull EditText inputUsername,
      @NonNull ConstraintLayout main, @NonNull ProgressBar progressIndicator,
      @NonNull TextView titleApp) {
    this.rootView = rootView;
    this.background = background;
    this.box = box;
    this.buttonRegister = buttonRegister;
    this.descApp = descApp;
    this.fieldConfirmPassword = fieldConfirmPassword;
    this.fieldEmail = fieldEmail;
    this.fieldPassword = fieldPassword;
    this.fieldUsername = fieldUsername;
    this.iconConfirmPassword = iconConfirmPassword;
    this.iconEmail = iconEmail;
    this.iconPassword = iconPassword;
    this.iconUser = iconUser;
    this.inputConfirmPassword = inputConfirmPassword;
    this.inputEmail = inputEmail;
    this.inputPassword = inputPassword;
    this.inputUsername = inputUsername;
    this.main = main;
    this.progressIndicator = progressIndicator;
    this.titleApp = titleApp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background;
      ImageView background = ViewBindings.findChildViewById(rootView, id);
      if (background == null) {
        break missingId;
      }

      id = R.id.box;
      ConstraintLayout box = ViewBindings.findChildViewById(rootView, id);
      if (box == null) {
        break missingId;
      }

      id = R.id.buttonRegister;
      Button buttonRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegister == null) {
        break missingId;
      }

      id = R.id.descApp;
      TextView descApp = ViewBindings.findChildViewById(rootView, id);
      if (descApp == null) {
        break missingId;
      }

      id = R.id.fieldConfirmPassword;
      ConstraintLayout fieldConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (fieldConfirmPassword == null) {
        break missingId;
      }

      id = R.id.fieldEmail;
      ConstraintLayout fieldEmail = ViewBindings.findChildViewById(rootView, id);
      if (fieldEmail == null) {
        break missingId;
      }

      id = R.id.fieldPassword;
      ConstraintLayout fieldPassword = ViewBindings.findChildViewById(rootView, id);
      if (fieldPassword == null) {
        break missingId;
      }

      id = R.id.fieldUsername;
      ConstraintLayout fieldUsername = ViewBindings.findChildViewById(rootView, id);
      if (fieldUsername == null) {
        break missingId;
      }

      id = R.id.iconConfirmPassword;
      ImageView iconConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (iconConfirmPassword == null) {
        break missingId;
      }

      id = R.id.iconEmail;
      ImageView iconEmail = ViewBindings.findChildViewById(rootView, id);
      if (iconEmail == null) {
        break missingId;
      }

      id = R.id.iconPassword;
      ImageView iconPassword = ViewBindings.findChildViewById(rootView, id);
      if (iconPassword == null) {
        break missingId;
      }

      id = R.id.iconUser;
      ImageView iconUser = ViewBindings.findChildViewById(rootView, id);
      if (iconUser == null) {
        break missingId;
      }

      id = R.id.inputConfirmPassword;
      EditText inputConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputConfirmPassword == null) {
        break missingId;
      }

      id = R.id.inputEmail;
      EditText inputEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.inputPassword;
      EditText inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.inputUsername;
      EditText inputUsername = ViewBindings.findChildViewById(rootView, id);
      if (inputUsername == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.progressIndicator;
      ProgressBar progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.titleApp;
      TextView titleApp = ViewBindings.findChildViewById(rootView, id);
      if (titleApp == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, background, box,
          buttonRegister, descApp, fieldConfirmPassword, fieldEmail, fieldPassword, fieldUsername,
          iconConfirmPassword, iconEmail, iconPassword, iconUser, inputConfirmPassword, inputEmail,
          inputPassword, inputUsername, main, progressIndicator, titleApp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
